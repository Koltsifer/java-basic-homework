package ru.kolts.java.basic.homework06.lesson12.oop;
/**
 * Реализуйте классы Тарелка (максимальное количество еды, текущее количество еды) и Кот (имя, аппетит).
 * Количество еды измеряем в условных единицах.
 * При создании тарелки указывается ее объем и она полностью заполняется едой
 * В тарелке должен быть метод, позволяющий добавить еду в тарелку. После добавления в тарелке не может
 * оказаться еды больше максимума
 * В тарелке должен быть boolean метод уменьшения количества еды, при этом после такого уменьшения, в тарелке не
 * может оказаться отрицательное количество еды (если удалось уменьшить еду так, чтобы в
 * тарелке осталось >= 0 кусков еды, то возвращаем true, в противном случае - false).
 * Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось покушать
 * (хватило еды), сытость = true.
 * Считаем, что если коту мало еды в тарелке, то он её просто не трогает, то есть не может быть наполовину сыт
 * (это сделано для упрощения логики программы).
 * Создать массив котов и тарелку с едой, попросить всех котов покушать из этой тарелки и потом вывести информацию
 * о сытости котов в консоль.
 */
public class MainApp {
    public static void main(String[] args) {
        Cat[] cats = {
                new Cat("Барсик", 1),
                new Cat("Сахар", 2),
                new Cat("Коржик", 2),
                new Cat("Батон", 4),
                new Cat("Собака", 1),
                new Cat("Чешир", 2),
                new Cat("Живоглот", 5)
        };
        Plate plate = new Plate(15);

        for (Cat cat : cats) {
            System.out.println(cat);
        }
        for (Cat cat : cats) {
            cat.eatFromPlate(plate);
        }
        for (Cat cat : cats) {
            System.out.println(cat);
        }
        System.out.println(plate);
        plate.addFood(10);
        plate.addFood(50);
        plate.addFood(-10);
        System.out.println(plate);
        for (Cat cat : cats) {
            cat.eatFromPlate(plate);
        }
        for (Cat cat : cats) {
            System.out.println(cat);
        }
    }
}